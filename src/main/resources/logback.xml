<?xml version="1.0" encoding="UTF-8"?>
<!-- configuration 属性说明 scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod: 
	设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 debug: 
	当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" debug="false">

	<contextName>HJ-Variable</contextName>
	
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<property name="APP_NAME" value="HJ-Variable" />
	<property name="LOG_HOME" value="logs/${APP_NAME}" />
	
	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
	</appender>
	
	 <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${APP_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${LOG_HOME}/${APP_NAME}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%date{ISO8601}\t%thread\t%level\t%logger\t%message%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
	
	
	<!--日志异步到Mysql数据库 -->
	<!-- <appender name="MYSQL" class="ch.qos.logback.classic.db.DBAppender">
		<connectionSource
			class="ch.qos.logback.core.db.DriverManagerConnectionSource">
			<dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">
				<driverClass>com.mysql.jdbc.Driver</driverClass>
				<url>jdbc:mysql://127.0.0.1:3306/databaseName</url>
				<user>root</user>
				<password>root</password>
			</dataSource>
		</connectionSource>
	</appender> -->
	
	<!--日志输出到Mongo数据库 -->
	<appender name="MONGO" class="com.hzcf.variable.log.MongoDBAppender">
		<host>192.168.1.110</host>
        <port>27017</port>
        <db>${APP_NAME}</db>
	</appender>
	<!-- <appender name="MONGO" class="com.hzcf.operation.base.log.MongoTemplateAppender"></appender> -->
	<!-- 异步输出到Mongo -->
    <appender name="MONGO-ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="MONGO"/>
    </appender>
	
	
	<!--
    <logger>
	    用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。<logger>仅有一个name属性，一个可选的level和一个可选的additivity属性。
	    name:
	    用来指定受此logger约束的某一个包或者具体的某一个类。
	    level:
	    用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别。
	    如果未设置此属性，那么当前logger将会继承上级的级别。
	    additivity:
	    是否向上级logger传递打印信息。默认是true。
	    <logger>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个logger。
    -->
	<!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
	<logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE" />
	<logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG" />
	<logger name="org.hibernate.SQL" level="DEBUG" />
	<logger name="org.hibernate.engine.QueryParameters" level="DEBUG" />
	<logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG" />

	<!--myibatis log configure -->
	<logger name="com.apache.ibatis" level="TRACE" />
	<logger name="java.sql.Connection" level="DEBUG" />
	<logger name="java.sql.Statement" level="DEBUG" />
	<logger name="java.sql.PreparedStatement" level="DEBUG" />
	<!-- 关闭mongo集群连接信息 -->
	<logger name="org.mongodb.driver.cluster" level="ERROR" />
	
	<!-- 记录mongo执行日志 -->
	<logger name="com.hzcf.variable.service.VariableServiceMulitThreadImpl" level="INFO">
		<appender-ref ref="MONGO-ASYNC"/>
	</logger>
	<!-- 
		也是<loger>元素，但是它是根loger。只有一个level属性，应为已经被命名为"root".
		level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。默认是DEBUG。
		
		<root>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个loger。
	 -->
	 <!-- 默认的日志输出级别为DEBUG，输出至控制台和文件 ，特殊定义logger如未设置相关属性也会继承root属性-->
	<root level="INFO">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</root>
</configuration>